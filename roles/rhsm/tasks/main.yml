---

# Need to use the 'command' module for this task since the "redhat_subscription" module
# won't do a full "clean" when using the "state: absent" option
- name: 'Unregister the system if already registered - if this is a force re-registration'
  command: 'subscription-manager clean'
  when:
  - (rhsm_force_register|default('no'))|lower == 'yes'

# Need to use the 'command' module for this task since the "yum" module
# won't honor an "upgrade" of the RPM in case where the source server changed. 
# - note the 'warn: False' set because of this situation
- name: "Install Satellite certificate (if applicable)"
  command: "rpm -Uh --force http://{{ rhsm_server_hostname }}/pub/katello-ca-consumer-latest.noarch.rpm"
  args:
    warn: False
  when:
  - rhsm_server_hostname is defined
  - rhsm_server_hostname|trim != ''

- name: 'Register system using Red Hat Subscription Manager'
  redhat_subscription:
    state: present
    username: "{{ rhsm_username | default(omit) }}"
    password: "{{ rhsm_password | default(omit) }}"
    pool: "{{ rhsm_pool | default(omit) }}"
    server_hostname: "{{ rhsm_server_hostname | default(omit) }}"
    activationkey: "{{ rhsm_activationkey | default(omit) }}"
    org_id: "{{ rhsm_org_id | default(omit) }}"
    force_register: "{{ rhsm_force_register | default(omit) }}"

- name: "Obtain currently enabled repos"
  shell: 'subscription-manager repos --list-enabled | sed -ne "s/^Repo ID:[^a-zA-Z0-9]*\(.*\)/\1/p"'
  register: enabled_repos

- name: "Disable repositories that should not be enabled"
  shell: "subscription-manager repos --disable={{ item }}"
  with_items: 
  - "{{ enabled_repos.stdout_lines | difference(rhsm_repos) }}"

- name: "Enable specified repositories not already enabled"
  command: "subscription-manager repos --enable={{ item }}"
  with_items:
  - "{{ rhsm_repos | difference(enabled_repos.stdout_lines) }}"

